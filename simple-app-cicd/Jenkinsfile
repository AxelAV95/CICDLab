pipeline {
  agent {
    docker {
      image 'axelav95/maven-docker-agent:v1'
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock' // mount Docker socket to access the host's Docker daemon
    }
  }

  stages {

    stage('Verificar versi칩n de Java') {
            steps {
                sh 'echo $JAVA_HOME'
                sh 'java -version'
            }
    }

    stage('Configurar directorio seguro') {
            steps {
                script {
                    // A침adir el directorio de trabajo a los directorios seguros
                    sh 'git config --global --add safe.directory /var/lib/jenkins/workspace/CICD'
                }
            }
        }
    
    stage('Checkout') {
      steps {                
        sh 'git status'    
        //git branch: 'main', url: 'https://github.com/AxelAV95/CICDLab.git'
        git credentialsId: 'github', branch: 'main', url: 'https://github.com/AxelAV95/CICDLab.git'
      }
    }
    stage('Construir y hacer testing') {
      steps {
        sh 'ls -ltr'       
        // build the project and create a JAR file
        sh 'cd simple-app-cicd && mvn clean package'
      }
    }
    stage('An치lisis de c칩digo') {
      environment {
        SONAR_URL = "http://34.30.176.213:9000"
      }
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          sh 'cd simple-app-cicd && mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
        }
      }
    }
    stage('Construir y subir imagen de Docker') {
      environment {
        DOCKER_IMAGE = "axelav95/ultimate-cicd:${BUILD_NUMBER}"
        // DOCKERFILE_LOCATION = "CICDLab/simple-app-cicd/Dockerfile"
        REGISTRY_CREDENTIALS = credentials('docker-cred')
      }
      steps {
        script {
            sh 'cd simple-app-cicd && docker build -t ${DOCKER_IMAGE} .'
            def dockerImage = docker.image("${DOCKER_IMAGE}")
            docker.withRegistry('https://index.docker.io/v1/', "docker-cred") {
                dockerImage.push()
            }
        }
      }
    }
    stage('Actualizar archivos de despliegue') {
        environment {
            GIT_REPO_NAME = "CICDLab"
            GIT_USER_NAME = "AxelAV95"
        }
        steps {
            withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
                sh '''
                    git config user.email "villalobos.axel@yahoo.es"
                    git config user.name "AxelAV95"
                    BUILD_NUMBER=${BUILD_NUMBER}
                    sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" simple-app-cicd-manifests/deployment.yml
                    git add simple-app-cicd-manifests/deployment.yml
                    git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                    git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
                '''
            }
        }
    }
  }
}
